spring:
  profiles:
    active: local
  jpa:
    open-in-view: false
logging:
  pattern:
    console: '%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%logger{39}:%L){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}'

my-app:
  admin-email: admin@email.com
  admin-password: admin
  user-email: user@email.com
  user-password: user
  client-id: myApp
  client-secret: pass
---
spring:
  profiles: test
  jpa:
    properties:
      hibernate:
        jdbc.lob.non_contextual_creation: true
        format_sql: true
    hibernate:
      ddl-auto: create
  datasource:
    username: sa
    password:
    url: jdbc:h2:mem:testdb

logging:
  level:
    org.springframework.security: debug
    org.hibernate.SQL: debug

---
spring:
  profiles: dev
  jpa:
    properties:
      hibernate:
        jdbc.lob.non_contextual_creation: true
        format_sql: true
    hibernate:
      ddl-auto: create
  datasource:
    username: postgres
    password: postgres
    url: jdbc:postgresql://localhost:5432/postgres
    hikari:
      driver-class-name: org.postgresql.Driver

logging:
  level:
    org.springframework.security: debug
    org.hibernate.SQL: debug
#    org.hibernate.type: trace
#    org.hibernate.type.descriptor.sql.BasicBinder: trace

---
spring:
  profiles: test
  jpa:
#    show-sql: true
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: create-drop
logging:
  level:
    org.hibernate.SQL: debug
#    org.hibernate.type.descriptor.sql: trace